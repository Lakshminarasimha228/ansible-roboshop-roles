- name: Create app directory
  ansible.builtin.file:
    path: /app
    state: directory
    owner: roboshop
    group: roboshop
    mode: '0755'

- name: Create roboshop system user
  ansible.builtin.user:
    name: roboshop
    shell: /sbin/nologin
    system: true
    home: /app

- name: "Download {{ component }} code"
  ansible.builtin.get_url:
    url: "https://roboshop-artifacts.s3.amazonaws.com/{{ component }}-v3.zip"
    dest: /tmp/{{ component }}.zip

- name: "Extract {{ component }} code"
  ansible.builtin.unarchive:
    src: "/tmp/{{ component }}.zip"
    dest: /app
    remote_src: yes
    extra_opts: [ -o ]   # overwrite existing files if already there
    owner: roboshop
    group: roboshop

# Install Maven to build the project
- name: Install Maven
  ansible.builtin.yum:
    name: maven
    state: present

# Build the JAR file
- name: Build shipping package
  ansible.builtin.command: mvn clean package
  args:
    chdir: /app
  become_user: roboshop

# Move built jar to a consistent name
- name: Rename jar to shipping.jar
  ansible.builtin.copy:
    src: /app/target/shipping-1.0.jar
    dest: /app/shipping.jar
    remote_src: yes
    owner: roboshop
    group: roboshop
    mode: '0755'

# Configure systemd service
- name: Setup systemd service for shipping
  ansible.builtin.copy:
    dest: /etc/systemd/system/shipping.service
    content: |
      [Unit]
      Description=Shipping Service
      After=network.target

      [Service]
      User=roboshop
      WorkingDirectory=/app
      ExecStart=/usr/bin/java -jar /app/shipping.jar
      Restart=always

      [Install]
      WantedBy=multi-user.target

- name: Reload systemd
  ansible.builtin.systemd:
    daemon_reload: yes

- name: Enable and start shipping service
  ansible.builtin.systemd:
    name: shipping
    state: started
    enabled: yes
